# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2018-09-28 16:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assumption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('dvf', models.CharField(blank=True, choices=[('desirability', 'Desirability'), ('viability', 'Viability'), ('feasibility', 'Feasibility')], max_length=200)),
                ('assumption', models.TextField(blank=True)),
                ('metric', models.TextField(blank=True)),
                ('learnings', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('Validated', 'Validated'), ('In Progress', 'In Progress'), ('Invalidated', 'Invalidated')], max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('text', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('Validated', 'Validated'), ('In Progress', 'In Progress'), ('Invalidated', 'Invalidated')], max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dvf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('desirability', models.CharField(blank=True, choices=[('On Track', 'On Track'), ('Delayed', 'Delayed'), ('At Risk', 'At Risk')], max_length=200)),
                ('viability', models.CharField(blank=True, choices=[('On Track', 'On Track'), ('Delayed', 'Delayed'), ('At Risk', 'At Risk')], max_length=200)),
                ('feasibility', models.CharField(blank=True, choices=[('On Track', 'On Track'), ('Delayed', 'Delayed'), ('At Risk', 'At Risk')], max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Elevator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('text', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='files/%Y%m%d')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Future',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('text', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('link', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('dvf', models.CharField(blank=True, choices=[('desirability', 'Desirability'), ('viability', 'Viability'), ('feasibility', 'Feasibility')], max_length=200)),
                ('metric', models.TextField(blank=True)),
                ('value', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('On Track', 'On Track'), ('Delayed', 'Delayed'), ('At Risk', 'At Risk')], max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Past',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('text', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('text', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('Validated', 'Validated'), ('In Progress', 'In Progress'), ('Invalidated', 'Invalidated')], max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('profile_image', models.FileField(null=True, upload_to='images/%Y%m%d')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zx_dashboard', models.BooleanField(default=False)),
                ('os_model', models.BooleanField(default=False)),
                ('assumptions', models.BooleanField(default=False)),
                ('elevator_pitch', models.BooleanField(default=False)),
                ('problem', models.BooleanField(default=False)),
                ('solution', models.BooleanField(default=False)),
                ('business_model', models.BooleanField(default=False)),
                ('checkpoint', models.BooleanField(default=False)),
                ('assumption_list', models.BooleanField(default=False)),
                ('traction', models.BooleanField(default=False)),
                ('dashboard', models.BooleanField(default=False)),
                ('next_steps', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('stage', models.CharField(blank=True, choices=[('Concept', 'Concept'), ('Seed 1', 'Seed 1'), ('Seed 2', 'Seed 2'), ('Seed 3', 'Seed 3'), ('Launch 1', 'Launch 1'), ('Launch 2', 'Launch 2'), ('Scale', 'Scale')], max_length=200)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Archived', 'Archived'), ('Killed', 'Killed'), ('Draft', 'Draft')], max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('text', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, choices=[('Validated', 'Validated'), ('In Progress', 'In Progress'), ('Invalidated', 'Invalidated')], max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('seed', 'Seed'), ('seedlaunch', 'Seed Launch'), ('launch', 'Launch')], max_length=200)),
                ('text', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(blank=True, choices=[('edit', 'Edit'), ('view', 'View')], max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.CharField(blank=True, choices=[('APAC S', 'APAC S'), ('APAC N', 'APAC N'), ('EU', 'EU'), ('NAZ', 'NAZ'), ('MAZ', 'MAZ'), ('LAN LAS', 'LAN LAS')], max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project')),
            ],
        ),
        migrations.AddField(
            model_name='problem',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='problem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='past',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='past',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='metric',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='metric',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='link',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='link',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='future',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='future',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='file',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='file',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='elevator',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='elevator',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dvf',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='dvf',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='businessmodel',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='businessmodel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assumption',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Project'),
        ),
        migrations.AddField(
            model_name='assumption',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
